{"ast":null,"code":"import _slicedToArray from\"/Users/sungminro/Documents/GitHub/dinner-planner-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState,useContext}from\"react\";import{DataContext}from\"../../App\";import\"./Categories.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Categories=function Categories(_ref){var type=_ref.type;var recipeData=useContext(DataContext);var categoryLists=recipeData.categoryLists;// FOOD CATEGORIES STATES\nvar _useState=useState(categoryLists.foodCategories),_useState2=_slicedToArray(_useState,2),foodCategories=_useState2[0],setFoodCategories=_useState2[1];var _useState3=useState(\"FOODTYPE\"),_useState4=_slicedToArray(_useState3,2),foodCategory=_useState4[0],setFoodCategory=_useState4[1];// DRINK CATEGORIES STATES\nvar _useState5=useState(categoryLists.drinkCategories),_useState6=_slicedToArray(_useState5,2),drinkCategories=_useState6[0],setDrinkCategories=_useState6[1];var _useState7=useState(\"DRINKTYPE\"),_useState8=_slicedToArray(_useState7,2),drinkCategory=_useState8[0],setDrinkCategory=_useState8[1];// DISPLAY FOOD CATEGORIES ON THE PAGE\nvar displayFoodCategories=foodCategories.map(function(category,index){var type=\"\";if(foodCategory===\"FOODTYPE\"){type=\"FCATEGORY\";}else if(foodCategory===\"COUNTRY\"){type=\"FAREA\";}else if(foodCategory===\"ALPHABETICAL\"){type=\"FALPHABET\";}return/*#__PURE__*/_jsx(\"p\",{className:\"category-text category-food\",id:category,onClick:function onClick(e){return recipeData.dispatch({type:type,value:e.target.id});},children:category},index);});var displayDrinkCategories=drinkCategories.map(function(category,index){var type=\"\";if(drinkCategory===\"DRINKTYPE\"){type=\"DCATEGORY\";}else if(drinkCategory===\"ALCOHOLIC\"){type=\"DALCOHOLIC\";}else if(drinkCategory===\"ALPHABETICAL\"){type=\"DALPHABET\";}return/*#__PURE__*/_jsx(\"p\",{className:\"category-text category-drink\",id:category,onClick:function onClick(e){return recipeData.dispatch({type:type,value:e.target.id});},children:category},index);});// CHANGE DISPLAYED CATEGORIES WHEN SELECTED CATEGORY CHANGES.\nuseEffect(function(){switch(foodCategory){case\"FOODTYPE\":console.log(\"changed - foodtype\");setFoodCategories(recipeData.categoryLists.foodCategories);break;case\"COUNTRY\":console.log(\"changed - foodtarea\");setFoodCategories(recipeData.categoryLists.foodAreas);break;case\"ALPHABETICAL\":console.log(\"changed - alphaets\");setFoodCategories(recipeData.categoryLists.alphabets);break;default:return;}switch(drinkCategory){case\"DRINKTYPE\":console.log(\"changed - drinkType\");setDrinkCategories(recipeData.categoryLists.drinkCategories);break;case\"ALCOHOLIC\":console.log(\"changed - drinkArea\");setDrinkCategories(recipeData.categoryLists.drinkAlcoholic);break;case\"ALPHABETICAL\":console.log(\"changed - drinkAlphabets\");setDrinkCategories(recipeData.categoryLists.alphabets);break;default:return;}},[foodCategory,drinkCategory]);var foodCategoryJSX=function foodCategoryJSX(){return/*#__PURE__*/_jsxs(\"div\",{className:\"category-container max-width\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"select\",{id:\"food-category\",name:\"food-category\",onChange:function onChange(e){setFoodCategory(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"FOODTYPE\",children:\"FOOD TYPE\"}),/*#__PURE__*/_jsx(\"option\",{value:\"COUNTRY\",children:\"BY COUNTRY\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ALPHABETICAL\",children:\"FIRST LETTER\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"categories\",children:displayFoodCategories})]});};var drinkCategoryJSX=function drinkCategoryJSX(){return/*#__PURE__*/_jsxs(\"div\",{className:\"category-container max-width\",children:[/*#__PURE__*/_jsxs(\"select\",{id:\"drink-category\",name:\"drink-category\",onChange:function onChange(e){setDrinkCategory(e.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{value:\"DRINKTYPE\",children:\"DRINK TYPE\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ALCOHOLIC\",children:\"BY ALCOHOLIC\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ALPHABETICAL\",children:\"FIRST LETTER\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"categories\",children:displayDrinkCategories})]});};return/*#__PURE__*/_jsx(\"div\",{children:type===\"FOOD\"?foodCategoryJSX():drinkCategoryJSX()});};export default Categories;","map":{"version":3,"sources":["/Users/sungminro/Documents/GitHub/dinner-planner-react/src/Components/Common/Categories.js"],"names":["React","useEffect","useState","useContext","DataContext","Categories","type","recipeData","categoryLists","foodCategories","setFoodCategories","foodCategory","setFoodCategory","drinkCategories","setDrinkCategories","drinkCategory","setDrinkCategory","displayFoodCategories","map","category","index","e","dispatch","value","target","id","displayDrinkCategories","console","log","foodAreas","alphabets","drinkAlcoholic","foodCategoryJSX","drinkCategoryJSX"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { DataContext } from \"../../App\";\nimport \"./Categories.css\";\n\nconst Categories = ({ type }) => {\n  const recipeData = useContext(DataContext);\n  const categoryLists = recipeData.categoryLists;\n\n  // FOOD CATEGORIES STATES\n  const [foodCategories, setFoodCategories] = useState(\n    categoryLists.foodCategories\n  );\n  const [foodCategory, setFoodCategory] = useState(\"FOODTYPE\");\n\n  // DRINK CATEGORIES STATES\n  const [drinkCategories, setDrinkCategories] = useState(\n    categoryLists.drinkCategories\n  );\n  const [drinkCategory, setDrinkCategory] = useState(\"DRINKTYPE\");\n\n  // DISPLAY FOOD CATEGORIES ON THE PAGE\n  let displayFoodCategories = foodCategories.map((category, index) => {\n    let type = \"\";\n    if (foodCategory === \"FOODTYPE\") {\n      type = \"FCATEGORY\";\n    } else if (foodCategory === \"COUNTRY\") {\n      type = \"FAREA\";\n    } else if (foodCategory === \"ALPHABETICAL\") {\n      type = \"FALPHABET\";\n    }\n    return (\n      <p\n        key={index}\n        className=\"category-text category-food\"\n        id={category}\n        onClick={(e) => recipeData.dispatch({ type: type, value: e.target.id })}\n      >\n        {category}\n      </p>\n    );\n  });\n\n  let displayDrinkCategories = drinkCategories.map((category, index) => {\n    let type = \"\";\n    if (drinkCategory === \"DRINKTYPE\") {\n      type = \"DCATEGORY\";\n    } else if (drinkCategory === \"ALCOHOLIC\") {\n      type = \"DALCOHOLIC\";\n    } else if (drinkCategory === \"ALPHABETICAL\") {\n      type = \"DALPHABET\";\n    }\n    return (\n      <p\n        key={index}\n        className=\"category-text category-drink\"\n        id={category}\n        onClick={(e) => recipeData.dispatch({ type: type, value: e.target.id })}\n      >\n        {category}\n      </p>\n    );\n  });\n\n  // CHANGE DISPLAYED CATEGORIES WHEN SELECTED CATEGORY CHANGES.\n  useEffect(() => {\n    switch (foodCategory) {\n      case \"FOODTYPE\":\n        console.log(\"changed - foodtype\");\n        setFoodCategories(recipeData.categoryLists.foodCategories);\n        break;\n      case \"COUNTRY\":\n        console.log(\"changed - foodtarea\");\n        setFoodCategories(recipeData.categoryLists.foodAreas);\n        break;\n      case \"ALPHABETICAL\":\n        console.log(\"changed - alphaets\");\n        setFoodCategories(recipeData.categoryLists.alphabets);\n        break;\n      default:\n        return;\n    }\n\n    switch (drinkCategory) {\n      case \"DRINKTYPE\":\n        console.log(\"changed - drinkType\");\n        setDrinkCategories(recipeData.categoryLists.drinkCategories);\n        break;\n      case \"ALCOHOLIC\":\n        console.log(\"changed - drinkArea\");\n        setDrinkCategories(recipeData.categoryLists.drinkAlcoholic);\n        break;\n      case \"ALPHABETICAL\":\n        console.log(\"changed - drinkAlphabets\");\n        setDrinkCategories(recipeData.categoryLists.alphabets);\n        break;\n      default:\n        return;\n    }\n  }, [foodCategory, drinkCategory]);\n\n  const foodCategoryJSX = () => {\n    return (\n      <div className=\"category-container max-width\">\n        <div>\n          <select\n            id=\"food-category\"\n            name=\"food-category\"\n            onChange={(e) => {\n              setFoodCategory(e.target.value);\n            }}\n          >\n            <option value=\"FOODTYPE\">FOOD TYPE</option>\n            <option value=\"COUNTRY\">BY COUNTRY</option>\n            <option value=\"ALPHABETICAL\">FIRST LETTER</option>\n          </select>\n        </div>\n        <div className=\"categories\">{displayFoodCategories}</div>\n      </div>\n    );\n  };\n\n  const drinkCategoryJSX = () => {\n    return (\n      <div className=\"category-container max-width\">\n        <select\n          id=\"drink-category\"\n          name=\"drink-category\"\n          onChange={(e) => {\n            setDrinkCategory(e.target.value);\n          }}\n        >\n          <option value=\"DRINKTYPE\">DRINK TYPE</option>\n          <option value=\"ALCOHOLIC\">BY ALCOHOLIC</option>\n          <option value=\"ALPHABETICAL\">FIRST LETTER</option>\n        </select>\n        <div className=\"categories\">{displayDrinkCategories}</div>\n      </div>\n    );\n  };\n\n  return <div>{type === \"FOOD\" ? foodCategoryJSX() : drinkCategoryJSX()}</div>;\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}