{"ast":null,"code":"import _slicedToArray from \"/Users/sungminro/Downloads/dinner-planner-ash-pe (5)/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/sungminro/Downloads/dinner-planner-ash-pe (5)/src/Components/Common/Categories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from \"react\";\nimport { DataContext } from \"../../App\";\nimport \"./Categories.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Categories = function Categories(_ref) {\n  _s();\n\n  var type = _ref.type;\n  var recipeData = useContext(DataContext);\n  var categoryLists = recipeData.categoryLists; // FOOD CATEGORIES STATES\n\n  var _useState = useState(categoryLists.foodCategories),\n      _useState2 = _slicedToArray(_useState, 2),\n      foodCategories = _useState2[0],\n      setFoodCategories = _useState2[1];\n\n  var _useState3 = useState(\"FOODTYPE\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      foodCategory = _useState4[0],\n      setFoodCategory = _useState4[1]; // DRINK CATEGORIES STATES\n\n\n  var _useState5 = useState(categoryLists.drinkCategories),\n      _useState6 = _slicedToArray(_useState5, 2),\n      drinkCategories = _useState6[0],\n      setDrinkCategories = _useState6[1];\n\n  var _useState7 = useState(\"DRINKTYPE\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      drinkCategory = _useState8[0],\n      setDrinkCategory = _useState8[1]; // DISPLAY FOOD CATEGORIES ON THE PAGE\n\n\n  var displayFoodCategories = foodCategories.map(function (category, index) {\n    var type = \"\";\n\n    if (foodCategory === \"FOODTYPE\") {\n      type = \"FCATEGORY\";\n    } else if (foodCategory === \"COUNTRY\") {\n      type = \"FAREA\";\n    } else if (foodCategory === \"ALPHABETICAL\") {\n      type = \"FALPHABET\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"category-text category-food\",\n      id: category,\n      onClick: function onClick(e) {\n        return recipeData.dispatch({\n          type: type,\n          value: e.target.id\n        });\n      },\n      children: category\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, _this);\n  });\n  var displayDrinkCategories = drinkCategories.map(function (category, index) {\n    var type = \"\";\n\n    if (drinkCategory === \"DRINKTYPE\") {\n      type = \"DCATEGORY\";\n    } else if (drinkCategory === \"ALCOHOLIC\") {\n      type = \"DALCOHOLIC\";\n    } else if (drinkCategory === \"ALPHABETICAL\") {\n      type = \"DALPHABET\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"category-text category-drink\",\n      id: category,\n      onClick: function onClick(e) {\n        return recipeData.dispatch({\n          type: type,\n          value: e.target.id\n        });\n      },\n      children: category\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, _this);\n  }); // CHANGE DISPLAYED CATEGORIES WHEN SELECTED CATEGORY CHANGES.\n\n  useEffect(function () {\n    switch (foodCategory) {\n      case \"FOODTYPE\":\n        console.log(\"changed - foodtype\");\n        setFoodCategories(recipeData.categoryLists.foodCategories);\n        break;\n\n      case \"COUNTRY\":\n        console.log(\"changed - foodtarea\");\n        setFoodCategories(recipeData.categoryLists.foodAreas);\n        break;\n\n      case \"ALPHABETICAL\":\n        console.log(\"changed - alphaets\");\n        setFoodCategories(recipeData.categoryLists.alphabets);\n        break;\n\n      default:\n        return;\n    }\n\n    switch (drinkCategory) {\n      case \"DRINKTYPE\":\n        console.log(\"changed - drinkType\");\n        setDrinkCategories(recipeData.categoryLists.drinkCategories);\n        break;\n\n      case \"ALCOHOLIC\":\n        console.log(\"changed - drinkArea\");\n        setDrinkCategories(recipeData.categoryLists.drinkAlcoholic);\n        break;\n\n      case \"ALPHABETICAL\":\n        console.log(\"changed - drinkAlphabets\");\n        setDrinkCategories(recipeData.categoryLists.alphabets);\n        break;\n\n      default:\n        return;\n    }\n  }, [foodCategory, drinkCategory]);\n\n  var foodCategoryJSX = function foodCategoryJSX() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-container max-width\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"food-category\",\n          name: \"food-category\",\n          onChange: function onChange(e) {\n            setFoodCategory(e.target.value);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"FOODTYPE\",\n            children: \"FOOD TYPE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"COUNTRY\",\n            children: \"BY COUNTRY\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ALPHABETICAL\",\n            children: \"FIRST LETTER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: displayFoodCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var drinkCategoryJSX = function drinkCategoryJSX() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"category-container max-width\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"drink-category\",\n        name: \"drink-category\",\n        onChange: function onChange(e) {\n          setDrinkCategory(e.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"DRINKTYPE\",\n          children: \"DRINK TYPE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALCOHOLIC\",\n          children: \"BY ALCOHOLIC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ALPHABETICAL\",\n          children: \"FIRST LETTER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categories\",\n        children: displayDrinkCategories\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: type === \"FOOD\" ? foodCategoryJSX() : drinkCategoryJSX()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Categories, \"CktcrW+xtHVniy99EgXOzbI0Zcw=\");\n\n_c = Categories;\nexport default Categories;\n\nvar _c;\n\n$RefreshReg$(_c, \"Categories\");","map":{"version":3,"sources":["/Users/sungminro/Downloads/dinner-planner-ash-pe (5)/src/Components/Common/Categories.js"],"names":["React","useEffect","useState","useContext","DataContext","Categories","type","recipeData","categoryLists","foodCategories","setFoodCategories","foodCategory","setFoodCategory","drinkCategories","setDrinkCategories","drinkCategory","setDrinkCategory","displayFoodCategories","map","category","index","e","dispatch","value","target","id","displayDrinkCategories","console","log","foodAreas","alphabets","drinkAlcoholic","foodCategoryJSX","drinkCategoryJSX"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from \"react\";\nimport { DataContext } from \"../../App\";\nimport \"./Categories.css\";\n\nconst Categories = ({ type }) => {\n  const recipeData = useContext(DataContext);\n  const categoryLists = recipeData.categoryLists;\n\n  // FOOD CATEGORIES STATES\n  const [foodCategories, setFoodCategories] = useState(\n    categoryLists.foodCategories\n  );\n  const [foodCategory, setFoodCategory] = useState(\"FOODTYPE\");\n\n  // DRINK CATEGORIES STATES\n  const [drinkCategories, setDrinkCategories] = useState(\n    categoryLists.drinkCategories\n  );\n  const [drinkCategory, setDrinkCategory] = useState(\"DRINKTYPE\");\n\n  // DISPLAY FOOD CATEGORIES ON THE PAGE\n  let displayFoodCategories = foodCategories.map((category, index) => {\n    let type = \"\";\n    if (foodCategory === \"FOODTYPE\") {\n      type = \"FCATEGORY\";\n    } else if (foodCategory === \"COUNTRY\") {\n      type = \"FAREA\";\n    } else if (foodCategory === \"ALPHABETICAL\") {\n      type = \"FALPHABET\";\n    }\n    return (\n      <p\n        key={index}\n        className=\"category-text category-food\"\n        id={category}\n        onClick={(e) => recipeData.dispatch({ type: type, value: e.target.id })}\n      >\n        {category}\n      </p>\n    );\n  });\n\n  let displayDrinkCategories = drinkCategories.map((category, index) => {\n    let type = \"\";\n    if (drinkCategory === \"DRINKTYPE\") {\n      type = \"DCATEGORY\";\n    } else if (drinkCategory === \"ALCOHOLIC\") {\n      type = \"DALCOHOLIC\";\n    } else if (drinkCategory === \"ALPHABETICAL\") {\n      type = \"DALPHABET\";\n    }\n    return (\n      <p\n        key={index}\n        className=\"category-text category-drink\"\n        id={category}\n        onClick={(e) => recipeData.dispatch({ type: type, value: e.target.id })}\n      >\n        {category}\n      </p>\n    );\n  });\n\n  // CHANGE DISPLAYED CATEGORIES WHEN SELECTED CATEGORY CHANGES.\n  useEffect(() => {\n    switch (foodCategory) {\n      case \"FOODTYPE\":\n        console.log(\"changed - foodtype\");\n        setFoodCategories(recipeData.categoryLists.foodCategories);\n        break;\n      case \"COUNTRY\":\n        console.log(\"changed - foodtarea\");\n        setFoodCategories(recipeData.categoryLists.foodAreas);\n        break;\n      case \"ALPHABETICAL\":\n        console.log(\"changed - alphaets\");\n        setFoodCategories(recipeData.categoryLists.alphabets);\n        break;\n      default:\n        return;\n    }\n\n    switch (drinkCategory) {\n      case \"DRINKTYPE\":\n        console.log(\"changed - drinkType\");\n        setDrinkCategories(recipeData.categoryLists.drinkCategories);\n        break;\n      case \"ALCOHOLIC\":\n        console.log(\"changed - drinkArea\");\n        setDrinkCategories(recipeData.categoryLists.drinkAlcoholic);\n        break;\n      case \"ALPHABETICAL\":\n        console.log(\"changed - drinkAlphabets\");\n        setDrinkCategories(recipeData.categoryLists.alphabets);\n        break;\n      default:\n        return;\n    }\n  }, [foodCategory, drinkCategory]);\n\n  const foodCategoryJSX = () => {\n    return (\n      <div className=\"category-container max-width\">\n        <div>\n          <select\n            id=\"food-category\"\n            name=\"food-category\"\n            onChange={(e) => {\n              setFoodCategory(e.target.value);\n            }}\n          >\n            <option value=\"FOODTYPE\">FOOD TYPE</option>\n            <option value=\"COUNTRY\">BY COUNTRY</option>\n            <option value=\"ALPHABETICAL\">FIRST LETTER</option>\n          </select>\n        </div>\n        <div className=\"categories\">{displayFoodCategories}</div>\n      </div>\n    );\n  };\n\n  const drinkCategoryJSX = () => {\n    return (\n      <div className=\"category-container max-width\">\n        <select\n          id=\"drink-category\"\n          name=\"drink-category\"\n          onChange={(e) => {\n            setDrinkCategory(e.target.value);\n          }}\n        >\n          <option value=\"DRINKTYPE\">DRINK TYPE</option>\n          <option value=\"ALCOHOLIC\">BY ALCOHOLIC</option>\n          <option value=\"ALPHABETICAL\">FIRST LETTER</option>\n        </select>\n        <div className=\"categories\">{displayDrinkCategories}</div>\n      </div>\n    );\n  };\n\n  return <div>{type === \"FOOD\" ? foodCategoryJSX() : drinkCategoryJSX()}</div>;\n};\n\nexport default Categories;\n"]},"metadata":{},"sourceType":"module"}