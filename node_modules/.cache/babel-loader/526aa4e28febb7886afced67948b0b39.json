{"ast":null,"code":"import _asyncToGenerator from\"/Users/sungminro/Documents/GitHub/dinner-planner-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"/Users/sungminro/Documents/GitHub/dinner-planner-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/Users/sungminro/Documents/GitHub/dinner-planner-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";import React,{useEffect,useState}from\"react\";import Ingredients from\"../Common/Ingredients\";import{Link}from\"react-router-dom\";import\"./style.css\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";var FoodDetail=function FoodDetail(props){var foodId=props.match.params.food;var foodIdUrl=\"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\"+foodId;var _useState=useState({}),_useState2=_slicedToArray(_useState,2),food=_useState2[0],setFood=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),ingredients=_useState4[0],setIngredients=_useState4[1];function foodLookUp(){return _foodLookUp.apply(this,arguments);}function _foodLookUp(){_foodLookUp=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res,json,food,instructions,ingredients,key;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(foodIdUrl);case 2:res=_context.sent;_context.next=5;return res.json();case 5:json=_context.sent;food=json.meals[0];instructions=food.strInstructions.trim();food[\"strInstructions\"]=instructions.split(\".\");food[\"ingredients\"]=[];food[\"measures\"]=[];ingredients=[];for(key in food){if(key.includes(\"strIngredient\")&&food[key]){ingredients.push(food[key]);}if(key.includes(\"strMeasure\")&&food[key]){food[\"measures\"].push(food[key]);}}console.log(food);setFood(food);setIngredients(ingredients);case 16:case\"end\":return _context.stop();}}},_callee);}));return _foodLookUp.apply(this,arguments);}var setInstructions=[];if(food.strInstructions){setInstructions=food.strInstructions.map(function(instruction,index){if(instruction){return/*#__PURE__*/_jsxs(\"li\",{className:\"detail-instructions\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"pacifico-font\",children:[index+1,\". \"]}),\" \",instruction,\".\"]},index);}});}var displayTags=function displayTags(){var tags;if(food.strTags){var tagsArr=food.strTags.split(\",\");tags=tagsArr.map(function(tag,index){if(tag){return/*#__PURE__*/_jsx(\"p\",{className:\"card-tags tags-food\",children:tag});}});}return/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-tags-container\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"card-tags tags-food\",children:food.strCategory}),/*#__PURE__*/_jsx(\"p\",{className:\"card-tags tags-food\",children:food.strArea}),tags]});};useEffect(function(){foodLookUp();},[]);var arrow=\"< \";return/*#__PURE__*/_jsxs(\"div\",{className:\"max-width recipe-detail-page\",children:[/*#__PURE__*/_jsx(Link,{to:\"/cocktails\",className:\"float-left\",children:/*#__PURE__*/_jsxs(\"h3\",{children:[\" \",arrow,\" Back to Foods\"]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-title-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:food.strMeal}),displayTags()]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-detail-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"recipe-image\",children:/*#__PURE__*/_jsx(\"img\",{src:food.strMealThumb,alt:food.strMeal})}),/*#__PURE__*/_jsx(\"div\",{className:\"ingredients-container\",children:/*#__PURE__*/_jsx(Ingredients,{detail:true,allMeasures:food.measures,allIngredients:ingredients})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recipe-instructions\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Instructions\"}),setInstructions]})]});};export default FoodDetail;","map":{"version":3,"sources":["/Users/sungminro/Documents/GitHub/dinner-planner-react/src/Components/Detail/FoodDetail.js"],"names":["React","useEffect","useState","Ingredients","Link","FoodDetail","props","foodId","match","params","food","foodIdUrl","setFood","ingredients","setIngredients","foodLookUp","fetch","res","json","meals","instructions","strInstructions","trim","split","key","includes","push","console","log","setInstructions","map","instruction","index","displayTags","tags","strTags","tagsArr","tag","strCategory","strArea","arrow","strMeal","strMealThumb","measures"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Ingredients from \"../Common/Ingredients\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\nconst FoodDetail = (props) => {\n  let foodId = props.match.params.food;\n  const foodIdUrl =\n    \"https://www.themealdb.com/api/json/v1/1/lookup.php?i=\" + foodId;\n  const [food, setFood] = useState({});\n  const [ingredients, setIngredients] = useState([]);\n\n  async function foodLookUp() {\n    let res = await fetch(foodIdUrl);\n    let json = await res.json();\n    let food = json.meals[0];\n    let instructions = food.strInstructions.trim();\n    food[\"strInstructions\"] = instructions.split(\".\");\n    food[\"ingredients\"] = [];\n    food[\"measures\"] = [];\n    let ingredients = [];\n    for (let key in food) {\n      if (key.includes(\"strIngredient\") && food[key]) {\n        ingredients.push(food[key]);\n      }\n      if (key.includes(\"strMeasure\") && food[key]) {\n        food[\"measures\"].push(food[key]);\n      }\n    }\n    console.log(food);\n    setFood(food);\n    setIngredients(ingredients);\n  }\n\n  let setInstructions = [];\n  if (food.strInstructions) {\n    setInstructions = food.strInstructions.map((instruction, index) => {\n      if (instruction) {\n        return (\n          <li key={index} className=\"detail-instructions\">\n            <span className=\"pacifico-font\">{index + 1}. </span> {instruction}.\n          </li>\n        );\n      }\n    });\n  }\n  const displayTags = () => {\n    let tags;\n    if (food.strTags) {\n      let tagsArr = food.strTags.split(\",\");\n      tags = tagsArr.map((tag, index) => {\n        if (tag) {\n          return <p className=\"card-tags tags-food\">{tag}</p>;\n        }\n      });\n    }\n    return (\n      <div className=\"recipe-tags-container\">\n        <p className=\"card-tags tags-food\">{food.strCategory}</p>\n        <p className=\"card-tags tags-food\">{food.strArea}</p>\n        {tags}\n      </div>\n    );\n  };\n  useEffect(() => {\n    foodLookUp();\n  }, []);\n\n  const arrow = \"< \";\n  return (\n    <div className=\"max-width recipe-detail-page\">\n      <Link to=\"/cocktails\" className=\"float-left\">\n        <h3> {arrow} Back to Foods</h3>\n      </Link>\n      <div className=\"recipe-title-container\">\n        <h1>{food.strMeal}</h1>\n        {displayTags()}\n      </div>\n      <div className=\"recipe-detail-container\">\n        <div className=\"recipe-image\">\n          <img src={food.strMealThumb} alt={food.strMeal} />\n        </div>\n        <div className=\"ingredients-container\">\n          <Ingredients\n            detail={true}\n            allMeasures={food.measures}\n            allIngredients={ingredients}\n          />\n        </div>\n      </div>\n      <div className=\"recipe-instructions\">\n        <h1>Instructions</h1>\n        {setInstructions}\n      </div>\n    </div>\n  );\n};\n\nexport default FoodDetail;\n"]},"metadata":{},"sourceType":"module"}